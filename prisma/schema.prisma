// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminID             String     @id @default(uuid())
  adminName           String
  adminEmail          String     @unique
  adminPassword       String
  rootUser            Boolean
  adminProfilePicture String?
  articles            Article[]

  @@map("admins")
}

model Batch {
  batchID      String @id @default(uuid())
  academicYear String
  course       String
  batchName    String
  studentsID   User[]
  //  @relation(fields: [studentsID], references: [userID])
  Exam         Exam[]
  @@map("batches")

}

model SubjectScore {
  subjectScoreID String   @id @default(uuid())
  subjectName    String
  subjectScore   Int
  totalScore     Int
  exam           Exam     @relation(fields: [examID], references: [examID])
  examID         String

  @@map("subjectScores")
}

model Exam {
  examID    String   @id @default(uuid())
  examName  String
  score     SubjectScore[]
  examDate  DateTime
  student   User     @relation(fields: [studentID], references: [userID])
  studentID String
  batch     Batch  @relation(fields: [batchID], references: [batchID])
  batchID   String

  @@map("exams")

}

model Category {
  categoryID String   @id @default(uuid())
  categoryName String  @unique
  articles   Article[]
}

model Metatag {
  metatagID  String   @id @default(uuid())
  metatagName String  @unique
  articles   Article[]
}

model Document {
  documentID   String   @id @default(uuid())
  documentName String
  documentPath String
  articles   Article[]
}

model Article {
  articleID String   @id @default(uuid())
  title     String
  content   String
  category  Category[]
  metatags  Metatag[]
  date      DateTime @default(now())
  admin     Admin    @relation(fields: [createdBy], references: [adminID])
  createdBy String
  documents Document[]

  @@map("articles")
}

model User {
  userID             String    @id @default(uuid())
  userName           String
  userEmail          String    @unique
  userPassword       String
  userProfilePicture String
  userPhoneNo        String?
  isStudent          Boolean?
  batchID            Batch[]

  Exam Exam[]

  @@map("users")
}
